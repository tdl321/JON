//@version=5
strategy("JON - Robust Trading Strategy", 
         shorttitle="JON", 
         overlay=true, 
         margin_long=100, 
         margin_short=100,
         pyramiding=3,
         default_qty_type=strategy.percent_of_equity,
         default_qty_value=100,
         initial_capital=100000,
         currency=currency.USD,
         commission_type=strategy.commission.percent,
         commission_value=0.1)

// ═══════════════════════════════════════════════════════════════════════════════════════════════════
// 📋 STRATEGY INFORMATION
// ═══════════════════════════════════════════════════════════════════════════════════════════════════
// JON Strategy - A robust, multi-asset trading system designed for superior risk-adjusted returns
// 
// Core Philosophy:
// - Automate Everything: Full algorithmic execution without manual intervention
// - Robustness over Optimization: Works across multiple asset classes and market conditions  
// - Sidestep Bear Markets: Preserves capital during major downturns
// - Low-Frequency Investing: High-quality signals, typically <1 trade per month per asset
//
// Primary Assets: BTCUSD, NDX/QQQ, XAUUSD
// Strategy Type: Trend-following with dual entry system and configurable exits
// Risk Management: ATR-based position sizing with hard stops
// 
// Requirements Reference: F-1 to F-5, R-1 to R-4, UI-1 to UI-2, B-1 to B-3
// Development Protocol: 5-step validation process with backtest requirements
//
// ═══════════════════════════════════════════════════════════════════════════════════════════════════
// 📊 VERSION & CHANGELOG
// ═══════════════════════════════════════════════════════════════════════════════════════════════════
// v1.0.0 - Initial template setup with proper headers and structure
// v1.1.0 - Added comprehensive input parameter framework for all PRD requirements
//
// ═══════════════════════════════════════════════════════════════════════════════════════════════════

// ═══════════════════════════════════════════════════════════════════════════════════════════════════
// 🔧 INPUT PARAMETERS
// ═══════════════════════════════════════════════════════════════════════════════════════════════════

// ┌─────────────────────────────────────────────────────────────────────────────────────────────────┐
// │ F-1: TREND FILTER SETTINGS                                                                         │
// └─────────────────────────────────────────────────────────────────────────────────────────────────┘
trendFilterEnabled = input.bool(true, "Enable 200 SMA Trend Filter", group="📈 Trend Filter (F-1)")
trendSmaLength = input.int(200, "Trend SMA Length", minval=50, maxval=500, group="📈 Trend Filter (F-1)")
useReferenceAsset = input.bool(false, "Use Reference Asset Filter", group="📈 Trend Filter (F-1)")
referenceSymbol = input.symbol("CRYPTOCAP:TOTAL", "Reference Asset Symbol", group="📈 Trend Filter (F-1)")

// ┌─────────────────────────────────────────────────────────────────────────────────────────────────┐
// │ F-2: BREAKOUT ENTRY SETTINGS                                                                       │
// └─────────────────────────────────────────────────────────────────────────────────────────────────┘
enableBreakoutEntry = input.bool(true, "Enable Breakout Entry", group="🚀 Breakout Entry (F-2)")
breakoutLookback = input.int(20, "Breakout Lookback Period", minval=5, maxval=100, group="🚀 Breakout Entry (F-2)")
breakoutMinAge = input.int(3, "Minimum High Age (bars)", minval=1, maxval=50, group="🚀 Breakout Entry (F-2)")
breakoutMaxAge = input.int(50, "Maximum High Age (bars)", minval=5, maxval=200, group="🚀 Breakout Entry (F-2)")

// ┌─────────────────────────────────────────────────────────────────────────────────────────────────┐
// │ F-3: DIP BUY ENTRY SETTINGS                                                                        │
// └─────────────────────────────────────────────────────────────────────────────────────────────────┘
enableDipBuyEntry = input.bool(true, "Enable Dip Buy Entry", group="📉 Dip Buy Entry (F-3)")
dipBuyLookback = input.int(20, "Dip Buy Lookback Period", minval=5, maxval=100, group="📉 Dip Buy Entry (F-3)")
dipRecoveryThreshold = input.float(1.0, "Recovery Threshold %", minval=0.1, maxval=5.0, step=0.1, group="📉 Dip Buy Entry (F-3)")

// ┌─────────────────────────────────────────────────────────────────────────────────────────────────┐
// │ F-4: EXIT STRATEGY SETTINGS                                                                        │
// └─────────────────────────────────────────────────────────────────────────────────────────────────┘
exitMode = input.string("ATR Trail", "Exit Strategy Mode", options=["ATR Trail", "Aggressive Profit Take"], group="🎯 Exit Strategy (F-4)")
atrTrailMultiplier = input.float(2.0, "ATR Trail Multiplier", minval=0.5, maxval=5.0, step=0.1, group="🎯 Exit Strategy (F-4)")
aggressiveProfitTarget = input.float(5.0, "Aggressive Profit Target %", minval=1.0, maxval=20.0, step=0.5, group="🎯 Exit Strategy (F-4)")

// ┌─────────────────────────────────────────────────────────────────────────────────────────────────┐
// │ F-5: OPPORTUNISTIC EXIT SETTINGS                                                                   │
// └─────────────────────────────────────────────────────────────────────────────────────────────────┘
enableOpportunisticExit = input.bool(true, "Enable Opportunistic Exit", group="⚡ Opportunistic Exit (F-5)")
failedBreakoutBars = input.int(10, "Failed Breakout Timeout (bars)", minval=3, maxval=50, group="⚡ Opportunistic Exit (F-5)")

// ┌─────────────────────────────────────────────────────────────────────────────────────────────────┐
// │ R-1 & R-2: RISK MANAGEMENT SETTINGS                                                                │
// └─────────────────────────────────────────────────────────────────────────────────────────────────┘
riskPercent = input.float(1.0, "Risk Per Trade %", minval=0.1, maxval=10.0, step=0.1, group="⚖️ Risk Management (R-1, R-2)")
atrLength = input.int(14, "ATR Length", minval=5, maxval=50, group="⚖️ Risk Management (R-1, R-2)")
stopLossMultiplier = input.float(2.0, "Stop Loss ATR Multiplier", minval=0.5, maxval=5.0, step=0.1, group="⚖️ Risk Management (R-1, R-2)")

// ┌─────────────────────────────────────────────────────────────────────────────────────────────────┐
// │ R-3 & R-4: ADVANCED RISK SETTINGS                                                                  │
// └─────────────────────────────────────────────────────────────────────────────────────────────────┘
enableProfitLeverage = input.bool(false, "Enable Profit-Funded Leverage", confirm=true, group="🔧 Advanced Risk (R-3, R-4)")
maxPyramidEntries = input.int(1, "Max Pyramid Entries", minval=1, maxval=3, group="🔧 Advanced Risk (R-3, R-4)")

// ┌─────────────────────────────────────────────────────────────────────────────────────────────────┐
// │ UI-1 & UI-2: DISPLAY SETTINGS                                                                      │
// └─────────────────────────────────────────────────────────────────────────────────────────────────┘
showTrendSma = input.bool(true, "Show 200 SMA", group="🎨 Display Settings (UI-1, UI-2)")
showStopLevels = input.bool(true, "Show Stop Loss Levels", group="🎨 Display Settings (UI-1, UI-2)")
showTradeLabels = input.bool(true, "Show Trade Entry/Exit Labels", group="🎨 Display Settings (UI-1, UI-2)")
showDebugInfo = input.bool(false, "Show Debug Information", group="🎨 Display Settings (UI-1, UI-2)")

// ═══════════════════════════════════════════════════════════════════════════════════════════════════
// 📊 CORE INDICATORS (Task 1.3 - Will be implemented next)
// ═══════════════════════════════════════════════════════════════════════════════════════════════════

// ═══════════════════════════════════════════════════════════════════════════════════════════════════
// 📈 ENTRY LOGIC (Phase 2 - Future implementation)
// ═══════════════════════════════════════════════════════════════════════════════════════════════════

// ═══════════════════════════════════════════════════════════════════════════════════════════════════
// 📉 EXIT LOGIC (Phase 4 - Future implementation)
// ═══════════════════════════════════════════════════════════════════════════════════════════════════

// ═══════════════════════════════════════════════════════════════════════════════════════════════════
// ⚖️ RISK MANAGEMENT (Phase 3 - Future implementation)
// ═══════════════════════════════════════════════════════════════════════════════════════════════════

// ═══════════════════════════════════════════════════════════════════════════════════════════════════
// 🎨 USER INTERFACE & VISUALIZATION (Phase 6 - Future implementation)
// ═══════════════════════════════════════════════════════════════════════════════════════════════════

// Temporary placeholder to make script compile
if barstate.islast
    log.info("📊 JON Strategy initialized - Phase 1.2 complete: Input parameter framework implemented") 